// Copyright (C) 2021  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 21.1.0 Build 842 10/21/2021 SJ Lite Edition"

// DATE "10/19/2022 15:29:34"

// 
// Device: Altera 5CEBA4F23C7 Package FBGA484
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module ULA (
	S,
	A,
	B,
	C);
output 	[3:0] S;
input 	[3:0] A;
input 	[3:0] B;
input 	[1:0] C;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \S[3]~output_o ;
wire \S[2]~output_o ;
wire \S[1]~output_o ;
wire \S[0]~output_o ;
wire \C[0]~input_o ;
wire \B[2]~input_o ;
wire \C[1]~input_o ;
wire \A[1]~input_o ;
wire \B[1]~input_o ;
wire \A[0]~input_o ;
wire \B[0]~input_o ;
wire \inst7|inst5~0_combout ;
wire \A[2]~input_o ;
wire \A[3]~input_o ;
wire \B[3]~input_o ;
wire \inst7|inst5~1_combout ;
wire \inst7|inst5~2_combout ;
wire \inst|inst3|inst1~combout ;
wire \inst3|inst3|inst5~combout ;
wire \inst6|inst5~0_combout ;
wire \inst5|inst5~0_combout ;
wire \inst1|inst5~0_combout ;


cyclonev_io_obuf \S[3]~output (
	.i(\inst7|inst5~2_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[3]~output .bus_hold = "false";
defparam \S[3]~output .open_drain_output = "false";
defparam \S[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S[2]~output (
	.i(\inst6|inst5~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[2]~output .bus_hold = "false";
defparam \S[2]~output .open_drain_output = "false";
defparam \S[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S[1]~output (
	.i(\inst5|inst5~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[1]~output .bus_hold = "false";
defparam \S[1]~output .open_drain_output = "false";
defparam \S[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S[0]~output (
	.i(\inst1|inst5~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[0]~output .bus_hold = "false";
defparam \S[0]~output .open_drain_output = "false";
defparam \S[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \C[0]~input (
	.i(C[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\C[0]~input_o ));
// synopsys translate_off
defparam \C[0]~input .bus_hold = "false";
defparam \C[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B[2]~input (
	.i(B[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B[2]~input_o ));
// synopsys translate_off
defparam \B[2]~input .bus_hold = "false";
defparam \B[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \C[1]~input (
	.i(C[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\C[1]~input_o ));
// synopsys translate_off
defparam \C[1]~input .bus_hold = "false";
defparam \C[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B[1]~input (
	.i(B[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B[1]~input_o ));
// synopsys translate_off
defparam \B[1]~input .bus_hold = "false";
defparam \B[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B[0]~input (
	.i(B[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B[0]~input_o ));
// synopsys translate_off
defparam \B[0]~input .bus_hold = "false";
defparam \B[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst7|inst5~0 (
// Equation(s):
// \inst7|inst5~0_combout  = ( \B[0]~input_o  & ( (!\A[1]~input_o  & ((!\A[0]~input_o  & (\C[1]~input_o )) # (\A[0]~input_o  & ((\B[1]~input_o ))))) # (\A[1]~input_o  & ((!\A[0]~input_o  & ((\B[1]~input_o ))) # (\A[0]~input_o  & (!\C[1]~input_o )))) ) ) # ( 
// !\B[0]~input_o  & ( (\B[1]~input_o  & (!\C[1]~input_o  $ (!\A[1]~input_o ))) ) )

	.dataa(!\C[1]~input_o ),
	.datab(!\A[1]~input_o ),
	.datac(!\B[1]~input_o ),
	.datad(!\A[0]~input_o ),
	.datae(!\B[0]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst7|inst5~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst7|inst5~0 .extended_lut = "off";
defparam \inst7|inst5~0 .lut_mask = 64'h0606472E0606472E;
defparam \inst7|inst5~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A[3]~input (
	.i(A[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A[3]~input_o ));
// synopsys translate_off
defparam \A[3]~input .bus_hold = "false";
defparam \A[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B[3]~input (
	.i(B[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B[3]~input_o ));
// synopsys translate_off
defparam \B[3]~input .bus_hold = "false";
defparam \B[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst7|inst5~1 (
// Equation(s):
// \inst7|inst5~1_combout  = !\A[3]~input_o  $ (!\B[3]~input_o )

	.dataa(!\A[3]~input_o ),
	.datab(!\B[3]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst7|inst5~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst7|inst5~1 .extended_lut = "off";
defparam \inst7|inst5~1 .lut_mask = 64'h6666666666666666;
defparam \inst7|inst5~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst7|inst5~2 (
// Equation(s):
// \inst7|inst5~2_combout  = ( \A[2]~input_o  & ( \inst7|inst5~1_combout  & ( (!\C[0]~input_o  & ((!\B[2]~input_o  & ((!\inst7|inst5~0_combout ) # (\C[1]~input_o ))) # (\B[2]~input_o  & (\C[1]~input_o  & !\inst7|inst5~0_combout )))) # (\C[0]~input_o  & 
// (((!\C[1]~input_o )))) ) ) ) # ( !\A[2]~input_o  & ( \inst7|inst5~1_combout  & ( (!\C[0]~input_o  & ((!\B[2]~input_o  & ((!\C[1]~input_o ) # (!\inst7|inst5~0_combout ))) # (\B[2]~input_o  & (!\C[1]~input_o  & !\inst7|inst5~0_combout )))) ) ) ) # ( 
// \A[2]~input_o  & ( !\inst7|inst5~1_combout  & ( (!\C[0]~input_o  & ((!\B[2]~input_o  & (!\C[1]~input_o  & \inst7|inst5~0_combout )) # (\B[2]~input_o  & ((!\C[1]~input_o ) # (\inst7|inst5~0_combout ))))) # (\C[0]~input_o  & (((!\C[1]~input_o )))) ) ) ) # ( 
// !\A[2]~input_o  & ( !\inst7|inst5~1_combout  & ( (!\C[0]~input_o  & ((!\B[2]~input_o  & (\C[1]~input_o  & \inst7|inst5~0_combout )) # (\B[2]~input_o  & ((\inst7|inst5~0_combout ) # (\C[1]~input_o ))))) ) ) )

	.dataa(!\C[0]~input_o ),
	.datab(!\B[2]~input_o ),
	.datac(!\C[1]~input_o ),
	.datad(!\inst7|inst5~0_combout ),
	.datae(!\A[2]~input_o ),
	.dataf(!\inst7|inst5~1_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst7|inst5~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst7|inst5~2 .extended_lut = "off";
defparam \inst7|inst5~2 .lut_mask = 64'h022A70F2A880DA58;
defparam \inst7|inst5~2 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|inst3|inst1 (
// Equation(s):
// \inst|inst3|inst1~combout  = ( \B[0]~input_o  & ( \A[2]~input_o  & ( !\B[2]~input_o  $ (((!\A[1]~input_o  & (\B[1]~input_o  & \A[0]~input_o )) # (\A[1]~input_o  & ((\A[0]~input_o ) # (\B[1]~input_o ))))) ) ) ) # ( !\B[0]~input_o  & ( \A[2]~input_o  & ( 
// !\B[2]~input_o  $ (((\A[1]~input_o  & \B[1]~input_o ))) ) ) ) # ( \B[0]~input_o  & ( !\A[2]~input_o  & ( !\B[2]~input_o  $ (((!\A[1]~input_o  & ((!\B[1]~input_o ) # (!\A[0]~input_o ))) # (\A[1]~input_o  & (!\B[1]~input_o  & !\A[0]~input_o )))) ) ) ) # ( 
// !\B[0]~input_o  & ( !\A[2]~input_o  & ( !\B[2]~input_o  $ (((!\A[1]~input_o ) # (!\B[1]~input_o ))) ) ) )

	.dataa(!\B[2]~input_o ),
	.datab(!\A[1]~input_o ),
	.datac(!\B[1]~input_o ),
	.datad(!\A[0]~input_o ),
	.datae(!\B[0]~input_o ),
	.dataf(!\A[2]~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|inst3|inst1~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|inst3|inst1 .extended_lut = "off";
defparam \inst|inst3|inst1 .lut_mask = 64'h5656566AA9A9A995;
defparam \inst|inst3|inst1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst3|inst3|inst5 (
// Equation(s):
// \inst3|inst3|inst5~combout  = ( \B[0]~input_o  & ( \A[2]~input_o  & ( !\B[2]~input_o  $ (((!\A[1]~input_o  & ((!\A[0]~input_o ) # (\B[1]~input_o ))) # (\A[1]~input_o  & (\B[1]~input_o  & !\A[0]~input_o )))) ) ) ) # ( !\B[0]~input_o  & ( \A[2]~input_o  & ( 
// !\B[2]~input_o  $ (((!\A[1]~input_o  & \B[1]~input_o ))) ) ) ) # ( \B[0]~input_o  & ( !\A[2]~input_o  & ( !\B[2]~input_o  $ (((!\A[1]~input_o  & (!\B[1]~input_o  & \A[0]~input_o )) # (\A[1]~input_o  & ((!\B[1]~input_o ) # (\A[0]~input_o ))))) ) ) ) # ( 
// !\B[0]~input_o  & ( !\A[2]~input_o  & ( !\B[2]~input_o  $ (((!\B[1]~input_o ) # (\A[1]~input_o ))) ) ) )

	.dataa(!\B[2]~input_o ),
	.datab(!\A[1]~input_o ),
	.datac(!\B[1]~input_o ),
	.datad(!\A[0]~input_o ),
	.datae(!\B[0]~input_o ),
	.dataf(!\A[2]~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst3|inst3|inst5~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst3|inst3|inst5 .extended_lut = "off";
defparam \inst3|inst3|inst5 .lut_mask = 64'h59599A59A6A665A6;
defparam \inst3|inst3|inst5 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst6|inst5~0 (
// Equation(s):
// \inst6|inst5~0_combout  = ( \C[0]~input_o  & ( \C[1]~input_o  & ( \A[3]~input_o  ) ) ) # ( !\C[0]~input_o  & ( \C[1]~input_o  & ( \inst3|inst3|inst5~combout  ) ) ) # ( \C[0]~input_o  & ( !\C[1]~input_o  & ( \A[1]~input_o  ) ) ) # ( !\C[0]~input_o  & ( 
// !\C[1]~input_o  & ( \inst|inst3|inst1~combout  ) ) )

	.dataa(!\inst|inst3|inst1~combout ),
	.datab(!\A[1]~input_o ),
	.datac(!\inst3|inst3|inst5~combout ),
	.datad(!\A[3]~input_o ),
	.datae(!\C[0]~input_o ),
	.dataf(!\C[1]~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst6|inst5~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst6|inst5~0 .extended_lut = "off";
defparam \inst6|inst5~0 .lut_mask = 64'h555533330F0F00FF;
defparam \inst6|inst5~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst5|inst5~0 (
// Equation(s):
// \inst5|inst5~0_combout  = ( !\C[0]~input_o  & ( !\B[1]~input_o  $ (!\A[1]~input_o  $ (((\B[0]~input_o  & (!\A[0]~input_o  $ (!\C[1]~input_o )))))) ) ) # ( \C[0]~input_o  & ( ((!\C[1]~input_o  & (\A[0]~input_o )) # (\C[1]~input_o  & (((\A[2]~input_o ))))) 
// ) )

	.dataa(!\B[1]~input_o ),
	.datab(!\A[0]~input_o ),
	.datac(!\A[2]~input_o ),
	.datad(!\C[1]~input_o ),
	.datae(!\C[0]~input_o ),
	.dataf(!\B[0]~input_o ),
	.datag(!\A[1]~input_o ),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst5|inst5~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst5|inst5~0 .extended_lut = "on";
defparam \inst5|inst5~0 .lut_mask = 64'h5A5A330F6996330F;
defparam \inst5|inst5~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst1|inst5~0 (
// Equation(s):
// \inst1|inst5~0_combout  = ( \B[0]~input_o  & ( (!\C[0]~input_o  & (((!\A[0]~input_o )))) # (\C[0]~input_o  & (\C[1]~input_o  & (\A[1]~input_o ))) ) ) # ( !\B[0]~input_o  & ( (!\C[0]~input_o  & (((\A[0]~input_o )))) # (\C[0]~input_o  & (\C[1]~input_o  & 
// (\A[1]~input_o ))) ) )

	.dataa(!\C[0]~input_o ),
	.datab(!\C[1]~input_o ),
	.datac(!\A[1]~input_o ),
	.datad(!\A[0]~input_o ),
	.datae(!\B[0]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst1|inst5~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst1|inst5~0 .extended_lut = "off";
defparam \inst1|inst5~0 .lut_mask = 64'h01ABAB0101ABAB01;
defparam \inst1|inst5~0 .shared_arith = "off";
// synopsys translate_on

assign S[3] = \S[3]~output_o ;

assign S[2] = \S[2]~output_o ;

assign S[1] = \S[1]~output_o ;

assign S[0] = \S[0]~output_o ;

endmodule
